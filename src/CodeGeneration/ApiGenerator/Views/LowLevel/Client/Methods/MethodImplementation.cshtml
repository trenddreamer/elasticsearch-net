@using System
@using System.Linq
@using System.Collections.Generic
@using RazorLight
@using ApiGenerator.Domain
@using System.Text.RegularExpressions
@using ApiGenerator.Domain.Code.LowLevel
@inherits ApiGenerator.CodeTemplatePage<LowLevelClientMethod>
@{
	LowLevelClientMethod method = Model;
}
@{await IncludeAsync("LowLevel/Client/Methods/MethodDocs.cshtml", method); }
		public TResponse @(method.PerPathMethodName)@(Raw("<TResponse>"))(@Raw(method.Arguments))
			where TResponse : class, IElasticsearchResponse, new() => DoRequest@(Raw("<TResponse>"))(@method.HttpMethod, @Raw(method.UrlInCode), @(method.HasBody ? "body" : "null"), RequestParams(requestParameters));

@{await IncludeAsync("LowLevel/Client/Methods/MethodDocs.cshtml", method); }
		[MapsApi("@(method.CsharpNames.RestSpecName)", "@(method.MapsApiArguments)")]
		public Task@(Raw("<TResponse>")) @(method.PerPathMethodName)Async@(Raw("<TResponse>"))(@Raw(method.Arguments), CancellationToken ctx = default)
			where TResponse : class, IElasticsearchResponse, new() => DoRequestAsync@(Raw("<TResponse>"))(@method.HttpMethod, @Raw(method.UrlInCode), ctx, @(method.HasBody ? "body" : "null"), RequestParams(requestParameters));
